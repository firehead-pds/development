name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - main
jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - uses: actions/checkout@v2
      - name: Check for Front-End Changes
        run: |
          if [[ $(git diff --name-only HEAD~ HEAD | grep 'client') ]]; then
            echo "Front-end changes detected. Proceeding with Vercel deployment."
            deploy_to_vercel=true
          else
            echo "No front-end changes detected. Skipping Vercel deployment."
          fi
      - name: Install Vercel CLI (if front-end changes detected)
        if: ${{ steps.Check-for-Front-End-Changes.outputs.deploy_to_vercel == 'true' }}
        run: npm install --global vercel@latest
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
